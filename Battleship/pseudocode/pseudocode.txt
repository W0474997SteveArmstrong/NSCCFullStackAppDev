Ask the user what size of Grid he/she wants for himself or herself and also for the 
opponent.
create a multidimensional array
Initialize the outer grid
create an empty grid at each index of the outer grid
Now we have a grid having empty grids inside i.e. an array having empty arrays inside
Loop in such a way that we have access to each item within the inner array.
So we need to loop twice (for loop within for loop arr[i][j] = item)
Initialize what value we want this item to have.
In this way a grid for self and opponent will be created having items (cells 
with ships and cells without ships).
We have to identify first if the grid is the opponent's or ours and if there are ships
or if there are no ships.
We must not display the grid if it is our opponents.We must only be able to see our 
grid.
Print header first - same for opponent and us
Create Grid - same for opponent and us
Print the Grid - only for us
Initialize how many ships we have
Initialize how many ships our opponent has
Initialise what character we assign to our ship.
Place our ship in the grid by extracting the item from 2D array and assigning it to
our ship character.
Print the grid before placing the ship.
Place the ship
Print the grid after placing the ship.
place ship in opponent grid at places where there is no ship already present.
get the co-ordinates to place the ship randomly by using randomInt.
attack the ships.
if we hit, mark as hit, if we miss, mark as splash
dont attack the same place twice
keep track of how many ships we attacked and how many we are yet to attack to win the game.



Write code to place our ships
Write code to place our enemy's ships
Write code to attack the ships

console.log("********************");
        console.log("This is your Grid");
        console.log("*******************");